# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Dev

on:
  push:
    branches: [dev]

env:
  dh_username: ${{ secrets.DOCKERHUB_USERNAME }}
  dh_token: ${{ secrets.DOCKERHUB_TOKEN }}
  do_token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Check out code
        uses: actions/checkout@main

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      # - name: Get Current API version
      #   run: export PACKAGE_VERSION=$(node -p "require('./package.json').version")

      # - name: Install doctl
      #   uses: digitalocean/action-doctl@v2
      #   with:
      #     token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Build image
      #   run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/pouchfi:$(echo $PACKAGE_VERSION) .

      # # - name: Log in to DigitalOcean Container Registry with short-lived credentials
      # #   run: doctl registry login --expiry-seconds 1200

      # - name: Push image to Dockerhub
      #   run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/pouchfi:$(echo $PACKAGE_VERSION)

      # - name: Update deployment file
      #   run: TAG=$(echo $PACKAGE_VERSION) && sed -i 's|thedumebi/pouchfi|${{ secrets.DOCKERHUB_USERNAME }}/pouchfi:'${TAG}'|' $GITHUB_WORKSPACE/k8s/staging/deployment.yaml

      # - name: Show updated file
      #   run: cat deployment.yaml

      - name: Run Script
        # run: apk add bash
        run: chmod +x ./scripts/deploy.sh
      - run: ./scripts/deploy.sh staging
